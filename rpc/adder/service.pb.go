// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/adder/service.proto

package adder

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddTwoReq struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTwoReq) Reset()         { *m = AddTwoReq{} }
func (m *AddTwoReq) String() string { return proto.CompactTextString(m) }
func (*AddTwoReq) ProtoMessage()    {}
func (*AddTwoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_99dfd7a7f04e1d49, []int{0}
}

func (m *AddTwoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTwoReq.Unmarshal(m, b)
}
func (m *AddTwoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTwoReq.Marshal(b, m, deterministic)
}
func (m *AddTwoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTwoReq.Merge(m, src)
}
func (m *AddTwoReq) XXX_Size() int {
	return xxx_messageInfo_AddTwoReq.Size(m)
}
func (m *AddTwoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTwoReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddTwoReq proto.InternalMessageInfo

func (m *AddTwoReq) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *AddTwoReq) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type AddTwoResp struct {
	Sum                  int64    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTwoResp) Reset()         { *m = AddTwoResp{} }
func (m *AddTwoResp) String() string { return proto.CompactTextString(m) }
func (*AddTwoResp) ProtoMessage()    {}
func (*AddTwoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_99dfd7a7f04e1d49, []int{1}
}

func (m *AddTwoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTwoResp.Unmarshal(m, b)
}
func (m *AddTwoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTwoResp.Marshal(b, m, deterministic)
}
func (m *AddTwoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTwoResp.Merge(m, src)
}
func (m *AddTwoResp) XXX_Size() int {
	return xxx_messageInfo_AddTwoResp.Size(m)
}
func (m *AddTwoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTwoResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddTwoResp proto.InternalMessageInfo

func (m *AddTwoResp) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func init() {
	proto.RegisterType((*AddTwoReq)(nil), "twitch.moments.intern.homework.adder.AddTwoReq")
	proto.RegisterType((*AddTwoResp)(nil), "twitch.moments.intern.homework.adder.AddTwoResp")
}

func init() {
	proto.RegisterFile("rpc/adder/service.proto", fileDescriptor_99dfd7a7f04e1d49)
}

var fileDescriptor_99dfd7a7f04e1d49 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x2a, 0x48, 0xd6,
	0x4f, 0x4c, 0x49, 0x49, 0x2d, 0xd2, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x52, 0x29, 0x29, 0xcf, 0x2c, 0x49, 0xce, 0xd0, 0xcb, 0xcd, 0xcf, 0x4d,
	0xcd, 0x2b, 0x29, 0xd6, 0xcb, 0xcc, 0x2b, 0x49, 0x2d, 0xca, 0xd3, 0xcb, 0xc8, 0xcf, 0x4d, 0x2d,
	0xcf, 0x2f, 0xca, 0xd6, 0x03, 0xeb, 0x51, 0x52, 0xe7, 0xe2, 0x74, 0x4c, 0x49, 0x09, 0x29, 0xcf,
	0x0f, 0x4a, 0x2d, 0x14, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62,
	0x4c, 0x04, 0xf1, 0x92, 0x24, 0x98, 0x20, 0xbc, 0x24, 0x25, 0x39, 0x2e, 0x2e, 0x98, 0xc2, 0xe2,
	0x02, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xd2, 0x5c, 0xa8, 0x5a, 0x10, 0xd3, 0xa8, 0x84, 0x8b, 0xd5,
	0x11, 0x64, 0xa2, 0x50, 0x36, 0x17, 0x1b, 0x44, 0xa1, 0x90, 0xbe, 0x1e, 0x31, 0x4e, 0xd0, 0x83,
	0xdb, 0x2f, 0x65, 0x40, 0x9a, 0x86, 0xe2, 0x02, 0x27, 0xf6, 0x28, 0x56, 0xb0, 0x58, 0x12, 0x1b,
	0xd8, 0xd3, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x4d, 0x73, 0x05, 0x0f, 0x01, 0x00,
	0x00,
}
